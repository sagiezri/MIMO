%*************************************************************************%
%Receiver Design function - roles:
%Calculate for each reciver the w vector
%Input: H_i(matrix - NXM),M(scalar),Receiver_type(scalar),Noise_var(scalar),i(scalar).
%Output:w_i.
%*************************************************************************%

function [w_i]=ReceiverDesign(H_i,M,Receiver_type,Noise_var,i)
N=size(
%init w_i vector
w_i=zeros(1,size(H_i,1));
%Gets h_i vector
h_i=H_i(:,i);
%Check if we're on PZF mode
if Receiver_type~=0
    %Sorting H_i according minimal norm by the columns ->Calculate H_i_c     
     H_i_no_hi=H_i;
     %Exclude h_i from the sorting
     H_i_no_hi(:,i)=[];
     %Calculate each column norm - to get the closet tramister - we can cancel up to N-1 interference 
     minNormPointer=zeros(1,size(H_i_no_hi,2));
     minNormPointer=abs((sqrt(sum(H_i_no_hi.*H_i_no_hi))));
     [~,minNormIndex]=sort(minNormPointer(1,:));
     %Put h_i in the first place
     H_i_rt=zeros(size(H_i,1),size(H_i,1)+1);
     H_i_rt(:,1)=h_i;
     H_i_rt(:,2:end)=H_i(:,minNormIndex(1:size(H_i,1)));
     %All the rest sorted columns after    
     %We've in each row the w_i vector of the crosspding index.
     %1-MRC,2 and up PZF
     e_i=zeros(Receiver_type,1);
     e_i(1,1)=1;
       for  c=1:Receiver_type
         H_cc=H_i_rt(:,1:c);         
       end 
        w_i=H_cc/(H_cc'*H_cc)*e_i;     
else
%Receiver_type=0 - MMSE
H_HH=H_i*H_i';
w_i=((H_HH+Noise_var.*eye(size(H_HH,2)))\h_i);
end
    
end